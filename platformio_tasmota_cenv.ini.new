;*** Tasmota version for ESP32-S2
[env:tasmota32s2]
board_build.flash_mode  = qio
board_build.f_cpu       = 240000000L
board_build.f_flash     = 80000000L
upload_port             = /dev/cu.usbserial-1340
;upload_port             = /dev/cu.usbmodem01
build_flags             = ${env:tasmota32_base.build_flags}
                          -DCUSTOM_CONFIG_FIX
                          -DCUSTOM_CONFIG_UNIVERSAL
                          -DCUSTOM_CONFIG_REMOVALS
;                          -DFIRMWARE_TASMOTA32

[env:tasmota32s3]
upload_port                 = /dev/cu.usbserial-1340

[env:tasmota32s3-file]
extends                     = env:tasmota32_base
board                       = esp32s3-qio_qspi
upload_port                 = /dev/cu.usbserial-1340
; !!! Real flash size needed, avoid autoresize since it is formating FS !!!
board_upload.flash_size     = 8MB
board_upload.maximum_size   = 8388608
; Without autoresize a partition scheme is needed which does fit to flash size
board_build.partitions      = partitions/esp32_partition_app2944k_fs2M.csv
; Dont use safeboot, not used in this partition scheme -> an empty entry needed to overwrite the default setting
board_upload.arduino.flash_extra_images =
; Example for custom file upload in Tasmota Filesystem
custom_files_upload         = ${env:tasmota32_base.custom_files_upload}
                              tasmota/berry/modules/Partition_wizard.tapp
                              https://github.com/tasmota/autoconf/raw/main/esp32s3/DevKitC-1.autoconf

[env:tasmota32s3-qio_qspi-all]
extends                 = env:tasmota32_base
board                   = esp32s3-qio_qspi
board_build.f_cpu       = 240000000L
board_build.f_flash     = 80000000L
upload_port             = /dev/cu.usbserial-1340
build_flags             = ${env:tasmota32_base.build_flags} -DUSE_WEBCAM -DUSE_BERRY_ULP -DFIRMWARE_LVGL -DUSE_LVGL_OPENHASP -UFIRMWARE_TASMOTA32

[env:tasmota32s3cdc-qio_opi-all]
extends                 = env:tasmota32_base
board                   = esp32s3cdc-qio_opi
board_build.f_cpu       = 240000000L
board_build.f_flash     = 80000000L
upload_port             = /dev/cu.usbmodem13201
build_flags             = ${env:tasmota32_base.build_flags} -DUSE_WEBCAM -DUSE_BERRY_ULP -DFIRMWARE_LVGL -DUSE_LVGL_OPENHASP -UFIRMWARE_TASMOTA32

[env:tasmota32s3-bluetooth]
extends                 = env:tasmota32_base
board                   = esp32s3
board_build.f_cpu       = 240000000L
board_build.f_flash     = 80000000L
upload_port             = /dev/cu.usbserial-1340
build_flags             = ${env:tasmota32_base.build_flags} -D FIRMWARE_BLUETOOTH
lib_extra_dirs          =
                          lib/lib_basic
                          lib/lib_ssl
                          lib/lib_i2c
                          lib/libesp32
                          lib/libesp32_div
lib_ignore              =
                          TTGO TWatch Library
                          Micro-RTSP


[env:tasmota32c3]
board_build.f_flash     = 80000000L
board_build.flash_mode  = qio
upload_port             = /dev/cu.usbserial-1340
build_flags             = ${env:tasmota32_base.build_flags}
;                          -DCUSTOM_CONFIG_UNIVERSAL=true

[env:tasmota32c3-bluetooth]
extends                 = env:tasmota32c3
build_flags             = ${env:tasmota32c3.build_flags}
                          -DUSE_BLE_ESP32
                          -DUSE_MI_ESP32
lib_extra_dirs          = lib/libesp32, lib/libesp32_div, lib/lib_basic, lib/lib_i2c, lib/lib_ssl, lib/lib_rf, lib/lib_div

[env:tasmota32-denky]
extends                 = env:tasmota32_base
board                   = esp32_8M
upload_port             = /dev/cu.usbserial-denky_A7A8
upload_speed            = 2000000
board_build.flash_mode  = qio
board_build.f_flash     = 80000000L
board_build.f_cpu       = 240000000L
build_flags             = ${env:tasmota32_base.build_flags}
                          -DCUSTOM_CONFIG_REMOVALS=true
                          -DCUSTOM_CONFIG_TELEINFO
                          -DFIRMWARE_BLUETOOTH
                          -DUSE_MI_EXT_GUI
                          -DCONFIG_BT_NIMBLE_MEM_ALLOC_MODE_EXTERNAL=1
                          ;-DUSE_MI_ESP32_ENERGY
                          -DUSE_MI_HOMEKIT=1
lib_extra_dirs          = lib/libesp32, lib/libesp32_div, lib/lib_basic, lib/lib_i2c, lib/lib_display, lib/lib_div, lib/lib_ssl
monitor_filters         = time, colorize, log2file, esp32_exception_decoder

[env:tasmota32]
upload_port             = /dev/cu.SLAB_USBtoUART
board_build.f_flash     = 80000000L
board_build.f_cpu       = 240000000L
board_build.flash_mode  = qio
upload_speed            = 921600
check_skip_packages     = yes
build_flags             = ${env:tasmota32_base.build_flags} -DCUSTOM_CONFIG_UNIVERSAL=true -DCUSTOM_CONFIG_REMOVALS=true

[env:tasmota32legacy]
extends                 = env:tasmota32_base
upload_port             = /dev/cu.SLAB_USBtoUART
board_build.flash_mode  = qio
board                   = esp32_4M_Legacy
board_build.f_cpu       = 240000000L
build_flags             = ${env:tasmota32_base.build_flags} -DCUSTOM_CONFIG_UNIVERSAL=true -DCUSTOM_CONFIG_REMOVALS=true

[env:tasmota32-lvgl]
upload_port             = /dev/cu.SLAB_USBtoUART
board_build.flash_mode  = qio

[env:tasmota32solo1]
upload_port             = /dev/cu.SLAB_USBtoUART
board_build.flash_mode  = qio
board                   = esp32_solo1
build_flags             = ${env:tasmota32_base.build_flags} -DCUSTOM_CONFIG_STRIPPED=true -DCUSTOM_CONFIG_REMOVALS=true
custom_files_upload     = ${env:tasmota32_base.custom_files_upload}

[env:tasmota32solo1-bluetooth]
extends                 = env:tasmota32solo1
build_flags             = ${env:tasmota32_base.build_flags}
                          -DUSE_BLE_ESP32
                          -DUSE_MI_ESP32
;                          -DUSE_EQ3_ESP32
lib_extra_dirs          = lib/libesp32, lib/libesp32_div, lib/lib_basic, lib/lib_i2c, lib/lib_rf, lib/lib_div, lib/lib_ssl

[env:tasmota32-mi32-homebridge]
extends                 = env:tasmota32_base
board                   = esp32
upload_port             = /dev/cu.SLAB_USBtoUART
board_build.flash_mode  = qio
board_build.f_cpu       = 240000000L
board_build.f_flash     = 80000000L
build_flags             = ${env:tasmota32_base.build_flags}
                          -DFIRMWARE_BLUETOOTH
                          -DUSE_MI_EXT_GUI
                          ;-DUSE_MI_ESP32_ENERGY
                          -DUSE_MI_HOMEKIT=1
lib_extra_dirs          = lib/libesp32, lib/libesp32_div, lib/lib_basic, lib/lib_i2c, lib/lib_div, lib/lib_ssl
lib_ignore              = TTGO TWatch Library
                          Micro-RTSP

[env:tasmota32solo1-mi32-homebridge]
extends                 = env:tasmota32solo1
upload_port             = /dev/cu.SLAB_USBtoUART
board_build.flash_mode  = qio
board_build.f_cpu       = 240000000L
board_build.f_flash     = 80000000L
build_flags             = ${env:tasmota32_base.build_flags}
                          -DFIRMWARE_BLUETOOTH
                          -DUSE_MI_EXT_GUI
                          ;-DUSE_MI_ESP32_ENERGY
                          -DUSE_MI_HOMEKIT=1
lib_extra_dirs          = lib/libesp32, lib/libesp32_div, lib/lib_basic, lib/lib_i2c, lib/lib_div, lib/lib_ssl
lib_ignore              = TTGO TWatch Library
                          Micro-RTSP

[env:tasmota32c3-mi32-homebridge]
extends                 = env:tasmota32c3
upload_port             = /dev/cu.usbserial-1340
board_build.flash_mode  = qio
board_build.f_flash     = 80000000L
build_flags             = ${env:tasmota32_base.build_flags}
                          -DFIRMWARE_BLUETOOTH
                          -DUSE_MI_EXT_GUI
                          ;-DUSE_MI_ESP32_ENERGY
                          -DUSE_MI_HOMEKIT=1
lib_extra_dirs          = lib/libesp32, lib/libesp32_div, lib/lib_basic, lib/lib_i2c, lib/lib_div, lib/lib_ssl
lib_ignore              = TTGO TWatch Library
                          Micro-RTSP

[env:tasmota32s3-mi32-homebridge]
extends                 = env:tasmota32_base
upload_port             = /dev/cu.usbserial-1340
board_build.f_cpu       = 240000000L
board_build.f_flash     = 80000000L
board                   = esp32s3_8M
build_flags             = ${env:tasmota32_base.build_flags}
                          -DFIRMWARE_BLUETOOTH
                          -DUSE_MI_EXT_GUI
                          -DCONFIG_BT_NIMBLE_MEM_ALLOC_MODE_EXTERNAL=1
                          ;-DUSE_MI_ESP32_ENERGY
                          -DUSE_MI_HOMEKIT=1
lib_extra_dirs          = lib/libesp32, lib/libesp32_div, lib/lib_basic, lib/lib_i2c, lib/lib_div, lib/lib_ssl
lib_ignore              = TTGO TWatch Library
                          Micro-RTSP

[env:tasmota32s3cdc-cam]
extends                 = env:tasmota32_base
board                   = esp32s3cdc-qio_opi
upload_port             = /dev/cu.usbmodem13201
build_flags             = ${env:tasmota32_base.build_flags}
                          -DFIRMWARE_WEBCAM
                          -DCAMERA_MODEL_TTGO_T_CAM_SIM
                          -DUSE_I2S_AUDIO
;lib_extra_dirs          = lib/lib_ssl, lib/libesp32

[env:tasmota32s3cdc-box]
extends                 = env:tasmota32s3
board                   = esp32s3cdc-qio_opi
upload_port             = /dev/cu.usbmodem13201
board_build.f_cpu       = 240000000L
board_build.f_flash     = 80000000L
build_flags             = ${env:tasmota32_base.build_flags}
                          -UFIRMWARE_TASMOTA32
                          -DFIRMWARE_LVGL
                          -DUSE_LVGL_OPENHASP
                          -DESP32S3_BOX
lib_extra_dirs          = lib/libesp32, lib/libesp32_lvgl, lib/lib_basic, lib/lib_i2c, lib/lib_audio, lib/lib_display, lib/lib_ssl

[env:tasmota32c3cdc-safeboot]
;board_build.flash_mode  = qio
upload_port             = /dev/cu.usbmodem13201
extends                 = env:tasmota32c3-safeboot
board                   = esp32c3cdc

[env:tasmota32c3cdc]
board_build.flash_mode  = qio
upload_port             = /dev/cu.usbmodem13201
extends                 = env:tasmota32c3
board                   = esp32c3cdc
build_flags             = ${env:tasmota32_base.build_flags}
                          -DCUSTOM_CONFIG_UNIVERSAL=true
;                          -DCUSTOM_CONFIG_REMOVALS=true

[env:tasmota32c3cdc-luatos]
board_build.flash_mode  = dio
upload_port             = /dev/cu.usbmodem13201
extends                 = env:tasmota32c3
board                   = esp32c3cdc
build_flags             = ${env:tasmota32_base.build_flags}
                          -DCUSTOM_CONFIG_UNIVERSAL=true
;                          -DCUSTOM_CONFIG_REMOVALS=true

[env:tasmota32s2cdc]
board_build.flash_mode  = qio
upload_port             = /dev/cu.usbmodem01
extends                 = env:tasmota32s2
board                   = esp32s2cdc
build_flags             = ${env:tasmota32_base.build_flags}
                          -DCUSTOM_CONFIG_UNIVERSAL=true

[env:tasmota32s3cdc]
upload_port             = /dev/cu.usbmodem13201
board_upload.flash_size = 8MB
board_upload.maximum_size = 8388608
board_upload.arduino.flash_extra_images =
board_build.partitions  = partitions/esp32_partition_app2944k_fs2M.csv
extends                 = env:tasmota32s3
board                   = esp32s3cdc

[env:tasmota32s3cdc-safeboot]
upload_port             = /dev/cu.usbmodem13201
board_upload.flash_size = 8MB
board_upload.maximum_size = 8388608
board_upload.arduino.flash_extra_images =
board_build.partitions  = partitions/esp32_partition_app2944k_fs2M.csv
extends                 = env:tasmota32s3-safeboot
board                   = esp32s3cdc

[env:tasmota32-safeboot]
extends                 = env:tasmota32_base
upload_port             = /dev/cu.SLAB_USBtoUART
build_flags             = ${env:tasmota32_base.build_flags} -DFIRMWARE_SAFEBOOT
lib_extra_dirs          = lib/lib_ssl, lib/libesp32
lib_ignore              =
                          Micro-RTSP
                          ESP Mail Client
                          DHT sensor library


[env:tasmota32-zigbee]
extends                 = env:tasmota32_base
board_build.f_cpu       = 240000000L
build_flags             = ${env:tasmota32_base.build_flags} -DCUSTOM_CONFIG_ZIGBEE=true -DCUSTOM_CONFIG_REMOVALS=true
lib_extra_dirs          = lib/libesp32, lib/lib_i2c

; *** Override standard env tasmota32-odroidgo ***
[env:tasmota32-odroidgo]
upload_port             = /dev/cu.SLAB_USBtoUART

; *** Override standard env tasmota32-M5 stack core2 ***
[env:tasmota32-core2]
upload_port             = /dev/cu.SLAB_USBtoUART
board_build.flash_mode  = qio
board_build.f_cpu       = 240000000L
board_build.f_flash     = 80000000L

[env:tasmota32-bluetooth]
upload_port             = /dev/cu.SLAB_USBtoUART
board_build.flash_mode  = qio
board_build.f_cpu       = 240000000L
board_build.f_flash     = 80000000L

[env:tasmota32-webcam]
extends                 = env:tasmota32_base
board                   = esp32
board_build.flash_mode  = qio
board_build.f_cpu       = 240000000L
board_build.f_flash     = 80000000L
upload_port             = /dev/cu.SLAB_USBtoUART
build_flags             = ${env:tasmota32_base.build_flags} -DFIRMWARE_WEBCAM
lib_extra_dirs          = lib/lib_ssl, lib/libesp32

[env:tasmota32-battery]
extends                 = env:tasmota32_base
build_flags             = ${env:tasmota32_base.build_flags} -DCUSTOM_CONFIG_BATTERY=true -DCUSTOM_CONFIG_REMOVALS=true
lib_extra_dirs          = lib/libesp32

[env:tasmota32-gps]
extends                 = env:tasmota32_base
build_flags             = ${env:tasmota32_base.build_flags} -DCUSTOM_CONFIG_GPS=true -DCUSTOM_CONFIG_REMOVALS=true
lib_extra_dirs          = lib/libesp32, lib/lib_div

[env:tasmota32-scripting]
extends                 = env:tasmota32_base
build_flags             = ${env:tasmota32_base.build_flags} -DCUSTOM_CONFIG_SCRIPTING=true -DCUSTOM_CONFIG_REMOVALS=true
lib_extra_dirs          = lib/libesp32, lib/lib_basic, lib/lib_i2c, lib/lib_ssl

[env:tasmota32-thermostat]
extends                 = env:tasmota32_base
build_flags             = ${env.build_flags} -DCUSTOM_CONFIG_THERMOSTAT=true -DCUSTOM_CONFIG_REMOVALS=true
lib_extra_dirs          = lib/libesp32, lib/lib_basic, lib/lib_i2c

[env:tasmota32-fullrules]
extends                 = env:tasmota32_base
build_flags             = ${env:tasmota32_base.build_flags} -DCUSTOM_CONFIG_FULLRULES=true -DCUSTOM_CONFIG_REMOVALS=true
lib_extra_dirs          = lib/libesp32, lib/lib_basic, lib/lib_i2c

[env:tasmota32-zigbeebridge]
extends                 = env:tasmota32_base
build_flags             = ${env:tasmota32_base.build_flags} -DCUSTOM_CONFIG_ZIGBEE_BRIDGE32=true -DCUSTOM_CONFIG_REMOVALS=true
board_build.f_cpu       = 240000000L
lib_extra_dirs          = lib/libesp32, lib/lib_basic, lib/lib_ssl, lib/lib_i2c

[env:tasmota32-mega]
extends                 = env:tasmota32_base
build_flags             = ${env:tasmota32_base.build_flags} -DCUSTOM_CONFIG_MEGA=true -DCUSTOM_CONFIG_REMOVALS=true

[env:tasmota32-platinum]
extends                 = env:tasmota32_base
build_flags             = ${env:tasmota32_base.build_flags} -DUSE_IR_REMOTE_FULL=true -DCUSTOM_CONFIG_PLATINUM=true -DCUSTOM_CONFIG_REMOVALS=true

; *** Debug version used for PlatformIO Home Project Inspection
[env:tasmota-debug]
build_type                  = debug
build_unflags               = ${env.build_unflags}
check_tool                  = cppcheck
                              ;clangtidy
check_skip_packages         = yes
build_flags                 = ${env.build_flags}
;                              -Wstack-usage=300

[env:tasmota32-debug]
extends                     = env:tasmota32_base
build_type                  = debug
build_unflags               = ${env:tasmota32_base.build_unflags}
build_flags                 = ${env:tasmota32_base.build_flags}
check_tool                  = cppcheck
                              ;clangtidy
check_skip_packages         = yes
monitor_filters             = esp32_exception_decoder
;                              -Wstack-usage=300

; *** JTAG Debug version, needs esp-prog or FT2232H or FT232H
; *** Install howto for Windows https://community.platformio.org/t/esp32-pio-unified-debugger/4541/20
; *** Debugging works ONLY with LEGACY partition scheme !!!!

[env:tasmota32-ocd]
build_type              = debug
extends                 = env:tasmota32_base
board                   = esp32_4M
debug_tool              = esp-prog
upload_protocol         = esp-prog
debug_init_break        = tbreak setup
build_unflags           = ${env:tasmota32_base.build_unflags}
build_flags             = ${env:tasmota32_base.build_flags}
monitor_filters         = esp32_exception_decoder

[env:tasmota32solo1-ocd]
build_type              = debug
extends                 = env:tasmota32solo1
board                   = esp32_solo1_4M
debug_tool              = esp-prog
upload_protocol         = esp-prog
debug_init_break        = tbreak setup
build_unflags           = ${env:tasmota32_base.build_unflags}
build_flags             = ${env:tasmota32_base.build_flags}
monitor_filters         = esp32_exception_decoder

[env:tasmota32s2-ocd]
build_type              = debug
extends                 = env:tasmota32_base
board                   = esp32s2
debug_tool              = esp-prog
upload_protocol         = esp-prog
debug_init_break        = tbreak setup
build_unflags           = ${env:tasmota32_base.build_unflags}
build_flags             = ${env:tasmota32_base.build_flags}
monitor_filters         = esp32_exception_decoder

; *** JTAG Debug versions (only C3/S3), uses inbuilt CDC/jtag. No hardware required

[env:tasmota32s3cdc-ocd]
build_type              = debug
extends                 = env:tasmota32s3
board                   = esp32s3cdc
debug_tool              = esp-builtin
upload_protocol         = esp-builtin
debug_init_break        = tbreak setup
build_unflags           = ${env:tasmota32_base.build_unflags}
build_flags             = ${env:tasmota32_base.build_flags}
monitor_filters         = esp32_exception_decoder

[env:tasmota32c3cdc-ocd-luatos]
build_type              = debug
extends                 = env:tasmota32c3
board                   = esp32c3cdc
board_build.flash_mode  = dio
debug_tool              = esp-builtin
upload_protocol         = esp-builtin
debug_init_break        = tbreak setup
build_unflags           = ${env:tasmota32c3.build_unflags}
build_flags             = ${env:tasmota32c3.build_flags}
monitor_filters         = esp32_exception_decoder


[env:tasmota-universal]
build_flags             = ${env.build_flags} -DCUSTOM_CONFIG_UNIVERSAL=true -DCUSTOM_CONFIG_REMOVALS=true
board                   = esp8266_1M

[env:tasmota-tm1638]
build_flags             = ${env.build_flags} -DCUSTOM_CONFIG_UNIVERSAL=true -DCUSTOM_CONFIG_REMOVALS=true -DDISPLAY_CONFIG=true -DUSE_DISPLAY_TM1637=true
board                   = esp8266_4M2M

[env:tasmota-irfull]
build_flags             = ${env.build_flags} -DCUSTOM_CONFIG_UNIVERSAL=true -DCUSTOM_CONFIG_REMOVALS=true -DUSE_IR_REMOTE_FULL=true

; *** Esp8266 Tasmota Core Arduino 3.0.2 with lto
[env:tasmota-core3]
platform                = https://github.com/Jason2866/platform-espressif8266.git#tasmota302
platform_packages       = framework-arduinoespressif8266 @ https://github.com/esp8266/Arduino.git
                          ;toolchain-xtensa @ https://github.com/tasmota/Arduino/releases/download/3.0.2/toolchain-xtensa-darwin.tar.gz
;board                   = esp8266_4M2M
build_unflags           = ${env.build_unflags}
;                          -fno-lto
build_flags             = ${env.build_flags}
;                          -flto
;                          -DPIO_FRAMEWORK_ARDUINO_MMU_CACHE16_IRAM48_SECHEAP_SHARED
lib_ignore              = ESP Mail Client

; *** Override standard env tasmota-zbbridge! ***
[env:tasmota-zbbridge]
build_flags             = ${env.build_flags} -DFIRMWARE_ZBBRIDGE=true -DCUSTOM_CONFIG_REMOVALS=true
board_build.f_cpu       = 80000000L
lib_extra_dirs          = lib/lib_basic, lib/lib_i2c

[env:tasmota-zigbee]
build_flags             = ${env.build_flags} -DCUSTOM_CONFIG_ZIGBEE=true -DCUSTOM_CONFIG_REMOVALS=true
board                   = esp8266_4M2M
lib_extra_dirs          = lib/lib_basic, lib/lib_i2c

[env:tasmota-battery]
build_flags             = ${env.build_flags} -DCUSTOM_CONFIG_BATTERY=true -DCUSTOM_CONFIG_REMOVALS=true
lib_extra_dirs          =

[env:tasmota-gps]
build_flags             = ${env.build_flags} -DCUSTOM_CONFIG_GPS=true -DCUSTOM_CONFIG_REMOVALS=true

[env:tasmota-scripting]
build_flags             = ${env.build_flags} -DCUSTOM_CONFIG_SCRIPTING=true -DCUSTOM_CONFIG_REMOVALS=true

[env:tasmota-thermostat]
build_flags             = ${env.build_flags} -DCUSTOM_CONFIG_THERMOSTAT=true -DCUSTOM_CONFIG_REMOVALS=true
lib_extra_dirs          = lib/lib_basic, lib/lib_i2c, lib/lib_div

[env:tasmota-fullrules]
build_flags             = ${env.build_flags} -DCUSTOM_CONFIG_FULLRULES=true -DCUSTOM_CONFIG_REMOVALS=true
lib_extra_dirs          = lib/lib_basic, lib/lib_i2c

[env:tasmota-mega]
build_flags             = ${env.build_flags} -DCUSTOM_CONFIG_MEGA=true -DCUSTOM_CONFIG_REMOVALS=true
board_build.f_cpu       = 160000000L

[env:tasmota-platinum]
build_flags             = ${env.build_flags} -DUSE_IR_REMOTE_FULL=true -DCUSTOM_CONFIG_PLATINUM=true -DCUSTOM_CONFIG_REMOVALS=true
board                   = esp8266_4M2M
board_build.f_cpu       = 160000000L

[env:tasmota-minicustom]
build_flags             = ${env.build_flags} -DFIRMWARE_MINICUSTOM -DPIO_FRAMEWORK_ARDUINO_LWIP_HIGHER_BANDWIDTH
lib_extra_dirs          =
